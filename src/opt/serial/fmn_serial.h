/* fmn_serial.h
 */
 
#ifndef FMN_SERIAL_H
#define FMN_SERIAL_H

#include <stdint.h>

struct fmn_image;

/* Primitive tokens.
 *****************************************************/
 
static inline int fmn_digit_eval(char src) {
  if ((src>='0')&&(src<='9')) return src-'0';
  if ((src>='a')&&(src<='z')) return src-'a'+10;
  if ((src>='A')&&(src<='Z')) return src-'A'+10;
  return -1;
}
 
int fmn_int_eval(int *dst,const char *src,int srcc);

int fmn_for_each_comma_string(const char *src,int srcc,int (*cb)(const char *src,int srcc,void *userdata),void *userdata);

int fmn_vlq_decode(int *dst,const void *src,int srcc);

/* Encoder.
 ******************************************************/
 
struct fmn_encoder {
  uint8_t *v;
  int c,a;
};

void fmn_encoder_cleanup(struct fmn_encoder *encoder);
int fmn_encoder_require(struct fmn_encoder *encoder,int addc);
int fmn_encoder_replace(struct fmn_encoder *encoder,int p,int c,const void *src,int srcc);

int fmn_encode_raw(struct fmn_encoder *encoder,const void *src,int srcc);
int fmn_encode_fmt(struct fmn_encoder *encoder,const char *fmt,...);

int fmn_encode_u8(struct fmn_encoder *encoder,uint8_t src);

/* Decoder.
 ******************************************************/
 
//TODO decoder, if we need it.

/* File formats.
 *******************************************************/
 
// Extra values for (fmn_image.fmt), only supported by our 'serial' API.
#define FMN_IMAGE_FMT_Y1 0xfe
#define FMN_IMAGE_FMT_Y4 0xfd
#define FMN_IMAGE_FMT_Y16 0xfc
#define FMN_IMAGE_FMT_YA8 0xfb
#define FMN_IMAGE_FMT_YA16 0xfa
#define FMN_IMAGE_FMT_RGB8 0xf9
#define FMN_IMAGE_FMT_RGB16 0xf8
#define FMN_IMAGE_FMT_RGBA16 0xf7

#define FMN_FOR_EACH_EXTENDED_IMAGE_FMT \
  _(Y1) \
  _(Y4) \
  _(Y16) \
  _(YA8) \
  _(YA16) \
  _(RGB8) \
  _(RGB16) \
  _(RGBA16)

/* (image) should be zeroed initially.
 * If you supply (refname), we log errors and return -2 if logged.
 * We do not support:
 *  - Images larger than 4096 on either axis.
 *  - Color tables. (they'll decode ok be we'll interpret as gray)
 *  - Interlacing.
 *  - tRNS chunks. Use an alpha channel instead.
 */
int fmn_png_decode(struct fmn_image *image,const void *src,int srcc,const char *refname);

/* Get or set one pixel at a time, converting to/from canonical RGBA.
 * These are crazy expensive, but also crazy reliable.
 * They are aware of all the Full Moon formats, and everything generated by our file decoders.
 */
struct fmn_pixel { uint8_t r,g,b,a; };
struct fmn_pixel fmn_image_get_pixel(const struct fmn_image *image,int x,int y);
void fmn_image_set_pixel(struct fmn_image *image,int x,int y,struct fmn_pixel pixel);

int fmn_image_init(struct fmn_image *image,uint8_t fmt,int w,int h);

#endif
